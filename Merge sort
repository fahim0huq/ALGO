// ---- merge sort-----
#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define endl '\n'
#define MOD 10000007
#define mem(a, b) memset(a, b, sizeof(a))

void optimize()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
const int mx = 2e5+123;
int a[mx];
void merge ( int l, int mid, int r )
{
    int p = l; 
    int q = mid+1;
    int len = r - l + 1;
 
    int v[len];
    int k = 0;
 
    for ( int i = l; i <= r; i++ ) {
        if ( p > mid ) {
            v[k] = a[q];
            k++, q++;
        }
        else if ( q > r ) {
            v[k] = a[p];
            k++, p++;
        }
        else if ( a[p] <= a[q] ) {
            v[k] = a[p];
            k++, p++;
        }
        else {
            v[k] = a[q];
            k++, q++;
        }
    }
 
    k = 0;
    for ( int i = l; i <= r; i++ ) {
        a[i] = v[k];
        k++;
    }
}
 
void mergeSort ( int l, int r )
{
    if ( l == r ) return;
 
    int mid = ( l + r ) / 2;
 
    mergeSort( l, mid );
    mergeSort( mid+1, r );
    merge( l, mid, r );
}

void solve()
{
    
    int n;
    cin >>n;
    
    for(int i = 1;i<=n;i++)cin >> a[i];
   mergeSort(1,n);
   int ans = 1;
   for(int i =2;i<=n;i++)
      {
         if(a[i]!=a[i-1]) ans++;
      }
         cout << ans <<endl;
}

int main()
{
    optimize();

    int t=1;
    //cin >> t;
    while (t--)
        solve();

    return 0;
}
